{"version":3,"sources":["presentation/components/dialogs/SetupDialog.jsx","presentation/components/navigation/Navigation.jsx","redux/types/areaTypes.js","redux/types/nodeTypes.js","presentation/functional/batch/NodeJobs.jsx","presentation/functional/batch/index.jsx","presentation/components/navigation/index.js","presentation/components/dialogs/NewAreaDialog.jsx","presentation/components/dialogs/index.jsx","presentation/functional/router/Router.jsx","redux/types/datafeedTypes.js","redux/reducers/areasReducer.js","redux/reducers/nodesReducer.js","redux/reducers/rootReducer.js","redux/configureStore.js","presentation/functional/websocket/datafeed/area.js","presentation/functional/websocket/datafeed/index.js","presentation/functional/websocket/index.js","App.jsx","serviceWorker.js","index.js","core/constants/routes.js","redux/actions/nodeActions.js","redux/actions/areaActions.js"],"names":["SetupDialog","props","_getPrototypeOf2","_this","Object","_run_media_thomas_SharedStorage_homeautomation_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","rest","Array","_key","_run_media_thomas_SharedStorage_homeautomation_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_run_media_thomas_SharedStorage_homeautomation_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","concat","handleSubmit","_this$state","state","name","selectedArea","_this$props","setupNodeId","validation","values","reduce","prev","valid","setState","handleAreaSelect","e","value","target","_this$props2","areasFetched","ensureAreas","_this2","_this$props3","setupActive","handleClose","handleCancel","areas","_this$state2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_6__","onClose","open","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_11__","margin","label","type","fullWidth","error","onChange","style","marginBottom","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","width","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","placeholder","map","area","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","areaId","display","justifyContent","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","variant","color","onClick","marginLeft","Component","connect","nodes","setup","data","dispatch","closeSetupDialog","cancelSetup","id","setupNode","getAreaStatus","ConnectedDrawer","uninitializedNodes","discovery","_ref","onOpen","iOS","process","browser","test","navigator","userAgent","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_SwipeableDrawer__WEBPACK_IMPORTED_MODULE_7__","disableBackdropTransition","disableDiscovery","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_8__","minWidth","react_router_dom__WEBPACK_IMPORTED_MODULE_15__","className","to","as","ListItem","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_9__","button","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_14__","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_13__","badgeContent","paddingRight","Fragment","_material_ui_icons_Inbox__WEBPACK_IMPORTED_MODULE_11___default","Navigation","_React$useState","React","useState","_React$useState2","_run_media_thomas_SharedStorage_homeautomation_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","toggleDrawer","event","key","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_2__","position","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_4__","edge","aria-label","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__","__webpack_require__","d","__webpack_exports__","FETCHING_AREA_DATA","AREA_DATA_FETCHED","OPEN_NEW_AREA_MODAL","CLOSE_NEW_AREA_MODAL","IN_PROGRESS","AREA_SUCCESSFULLY_CREATED","SINGLE_AREA_FETCH","SINGLE_AREA_FETCH_SUCCESSFUL","AREA_CREATION_FAILED","AREA_NOT_FOUND","TEMP_UPDATE","TEMP_UPDATE_SUCCESS","ROUTINE_SUCCESSFULLY_ADDED","OPEN_EDIT_ROUTINE_DIALOG","CLOSE_EDIT_ROUTINE_DIALOG","RESET_EDIT_ROUTINE_DIALOG","ROUTINE_SUCCESSFULLY_DELETED","AREA_SUCCESSFULLY_DELETED","SET_NODES_SUCCESSFUL","HEATING_TOGGLE_SUCCESS","SET_ACTIVE_NODE","CLEAR_ACTIVE_NODE","FETCHING_NODE_INFO","NODE_INFO_FETCHED","NODE_INFO_DIRECT_LOAD","DISCOVERED_NEW_NODE","START_NODE_SETUP","CLOSE_NODE_SETUP","CANCEL_NODE_SETUP","NODE_SETUP_SUCCESS","NODE_DATA_FETCHED","NodeJobs","classCallCheck","possibleConstructorReturn","getPrototypeOf","discoverNodes","asyncToGenerator","regenerator_default","mark","_callee","nodesDiscovered","wrap","_context","next","axios","get","getUninitialised","then","response","currentNodeIds","node","nodeId","newNodes","filter","includes","toast","info","catch","err","toString","stop","intervalIDs","func","timeout","forEach","job","push","setInterval","clearInterval","n","nodesDiscoveredAction","BatchJobs","react_default","batch_NodeJobs","withRouter","config","newRoomModal","inProgress","closeNewAreaDialog","createNewArea","history","callback","createArea","slicedToArray","submitted","setSubmitted","_React$useState3","_React$useState4","inputValue","setInputValue","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","required","autoFocus","Button","disabled","preventDefault","CircularProgress","size","top","left","marginTop","Dialogs","dialogs_NewAreaDialog","AreasView","lazy","bind","NodesView","Promise","all","NodeControlView","SetupView","AreaConfigView","Router","react_router_dom","navigation","dialogs","react","fallback","react_router","component","path","exact","Area","TempUpdate","HumUpdate","TargetSet","NodeAdd","NewRoutine","RemoveRoutine","RemoveNode","NodesSet","SetHeatingEnabled","initialDataState","requestStatus","areasNotFound","initialConfigState","initialEditRoutineState","dialogOpen","routineId","routineData","combineReducers","undefined","action","types","objectSpread","payload","toConsumableArray","filteredArray","datafeed","feed","changed","unchanged","keys","editRoutine","initialAreasState","initialCoreState","latestVersion","activeNode","loading","initialDiscoveryState","initialSetupState","currentSetup","nodesLoaded","core","nodesReducer","areasReducer","enhancer","composeEnhancers","compose","applyMiddleware","thunk","configureStore","createStore","rootReducer","AreaFeed","openWebSocket","ws","WebSocket","onopen","onmessage","onMessage","onclose","onerror","onError","initialConnection","connected","autoClose","transition","Flip","closeButton","currentTimeout","warn","setTimeout","message","parsedMessage","JSON","parse","PureComponent","DataFeed","datafeed_area","WebSocketConnections","theme","createMuiTheme","palette","colors","App","es","store","ThemeProvider","react_toastify","newestOnTop","hideProgressBar","pauseOnVisibilityChange","draggable","pauseOnHover","batch","router_Router","websocket","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister","apiRoot","single","tempHistory","setTarget","addRoutine","deleteRoutine","setNodes","setHeating","on","getAreas","getAreaData","fetchNodeInfo","directLoad","startNodeSetup","fetchAllNodes","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","react_toastify__WEBPACK_IMPORTED_MODULE_1__","_types_nodeTypes__WEBPACK_IMPORTED_MODULE_2__","_core_constants_routes__WEBPACK_IMPORTED_MODULE_3__","timeOn","today","week","status","power","firmwareVersion","discoveredNodes","post","success","openNewAreaDialog","fetchAreaData","updateTargetTemperature","addNewRoutine","deleteArea","toggleHeating","_types_areaTypes__WEBPACK_IMPORTED_MODULE_2__","console","browserHistory","temp","Number","routine","delete"],"mappings":"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","file":"static/js/main.3dbff716.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport {\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n} from '@material-ui/core';\nimport {\n  closeSetupDialog,\n  cancelSetup,\n  setupNode,\n} from '../../../redux/actions/nodeActions';\nimport { getAreaStatus } from '../../../redux/actions/areaActions';\n\nclass SetupDialog extends Component {\n  static propTypes = {\n    areasFetched: PropTypes.bool.isRequired,\n    ensureAreas: PropTypes.func.isRequired,\n    setupActive: PropTypes.bool.isRequired,\n    handleClose: PropTypes.func.isRequired,\n    handleCancel: PropTypes.func.isRequired,\n    areas: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      selectedArea: null,\n      name: '',\n      validation: {\n        name: true,\n        selectedArea: true,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { areasFetched, ensureAreas } = this.props;\n    if (!areasFetched) {\n      ensureAreas();\n    }\n  }\n\n  handleSubmit = () => {\n    const { name, selectedArea } = this.state;\n    const { handleSubmit, setupNodeId } = this.props;\n    const validation = {};\n    validation.name = name !== '';\n    validation.selectedArea = selectedArea !== null;\n    const isValid = Object.values(validation).reduce(\n      (prev, valid) => (prev ? valid : false),\n      true,\n    );\n    if (isValid) {\n      handleSubmit(setupNodeId, name, selectedArea);\n      this.setState({ validation: {} });\n    } else {\n      this.setState({ validation });\n    }\n  };\n\n  handleAreaSelect = e => {\n    const { value } = e.target;\n    this.setState({ selectedArea: value });\n  };\n\n  render() {\n    const { setupActive, handleClose, handleCancel, areas } = this.props;\n    const { selectedArea, validation, name } = this.state;\n    return (\n      <Dialog onClose={handleClose} open={setupActive}>\n        <DialogTitle>Node Setup</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This Node requires setup before it can operate properly.\n          </DialogContentText>\n\n          <TextField\n            margin=\"none\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            error={!validation.name && name.length === 0}\n            onChange={e => this.setState({ name: e.target.value })}\n            style={{ marginBottom: 20 }}\n          />\n          <FormControl style={{ width: '100%', marginBottom: 20 }}>\n            <InputLabel>Assigned Room</InputLabel>\n            <Select\n              value={selectedArea}\n              onChange={this.handleAreaSelect}\n              placeholder=\"Assigned Room\"\n              error={!validation.selectedArea && selectedArea === null}\n              margin=\"none\"\n              label=\"Room\"\n            >\n              {areas.map(area => (\n                <MenuItem value={area.areaId}>{area.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginBottom: 10 }}\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              onClick={this.handleSubmit}\n              type=\"submit\"\n              variant=\"contained\"\n              style={{ marginLeft: 10, marginBottom: 10 }}\n            >\n              Submit\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    setupActive: state.nodes.setup.setupActive,\n    areas: state.areas.data.areas,\n    areasFetched: state.areas.data.areasFetched,\n    setupNodeId: state.nodes.setup.setupNodeId,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleClose: () => dispatch(closeSetupDialog()),\n    handleCancel: () => dispatch(cancelSetup()),\n    handleSubmit: (id, name, area) => dispatch(setupNode(id, name, area)),\n    ensureAreas: () => dispatch(getAreaStatus()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SetupDialog);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport { connect } from 'react-redux';\n// import HomeIcon from '@material-ui/icons/HomeIcon';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Badge } from '@material-ui/core';\n\nconst Drawer = ({ onClose, onOpen, open, uninitializedNodes }) => {\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  return (\n    <SwipeableDrawer\n      onClose={onClose}\n      onOpen={onOpen}\n      disableBackdropTransition={!iOS}\n      disableDiscovery={iOS}\n      open={open}\n    >\n      <List style={{ minWidth: 300 }}>\n        <Link className=\"sidebar-links\" to=\"/\" as={ListItem}>\n          <ListItem button>\n            <ListItemIcon>{/* <HomeIcon /> */}</ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n        </Link>\n        <Divider />\n        <Link\n          className=\"sidebar-links\"\n          to=\"/areas\"\n          onClick={onClose}\n          as={ListItem}\n        >\n          <ListItem button>\n            <ListItemIcon>{/* <MailIcon /> */}</ListItemIcon>\n            <ListItemText primary=\"Areas\" />\n          </ListItem>\n        </Link>\n        <Link\n          className=\"sidebar-links\"\n          to=\"/nodes\"\n          onClick={onClose}\n          as={ListItem}\n        >\n          <ListItem button>\n            <ListItemIcon>{/* <MailIcon /> */}</ListItemIcon>\n            <ListItemText primary=\"Nodes\" />\n          </ListItem>\n        </Link>\n        <Link\n          className=\"sidebar-links\"\n          to=\"/setup\"\n          onClick={onClose}\n          as={ListItem}\n        >\n          {uninitializedNodes ? (\n            <ListItem button>\n              <Badge\n                variant=\"standard\"\n                badgeContent={uninitializedNodes}\n                color=\"secondary\"\n              >\n                <ListItemIcon>{/* MailIcon */}</ListItemIcon>\n                <ListItemText style={{ paddingRight: 10 }}>Setup</ListItemText>\n              </Badge>\n            </ListItem>\n          ) : (\n            <ListItem button>\n              <>\n                <ListItemIcon>{/* <MailIcon /> */}</ListItemIcon>\n                <ListItemText primary=\"Setup\" />\n              </>\n            </ListItem>\n          )}\n        </Link>\n      </List>\n\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"\" />\n        </ListItem>\n      </List>\n    </SwipeableDrawer>\n  );\n};\n\nDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onOpen: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    uninitializedNodes: state.nodes.discovery.uninitializedNodes.length,\n  };\n};\n\nconst ConnectedDrawer = connect(\n  mapStateToProps,\n  null,\n)(Drawer);\n\nconst Navigation = () => {\n  const [state, setState] = React.useState({ open: false });\n\n  const toggleDrawer = open => event => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState({ open });\n  };\n  return (\n    <>\n      <ConnectedDrawer\n        open={state.open}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n      />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            onClick={toggleDrawer(true)}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"Menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">163 Roberts Wharf</Typography>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Navigation;\n","export const FETCHING_AREA_DATA = 'AREAS.FETCHING_AREA_DATA';\nexport const AREA_DATA_FETCHED = 'AREAS.AREA_DATA_FETCHED';\n\nexport const OPEN_NEW_AREA_MODAL = 'AREAS.OPEN_NEW_AREA_MODAL';\nexport const CLOSE_NEW_AREA_MODAL = 'AREAS.CLOSE_NEW_AREA_MODAL';\nexport const IN_PROGRESS = 'AREAS.IN_PROGRESS';\nexport const AREA_SUCCESSFULLY_CREATED = 'AREAS.AREA_SUCCESSFULLY_CREATED';\nexport const SINGLE_AREA_FETCH = 'AREAS.SINGLE_AREA_FETCH';\nexport const SINGLE_AREA_FETCH_SUCCESSFUL =\n  'AREAS.SINGLE_AREA_FETCH_SUCCESSFUL';\nexport const AREA_CREATION_FAILED = 'AREAS.AREA_CREATION_FAILED';\nexport const AREA_NOT_FOUND = 'AREAS.AREA_NOT_FOUND';\nexport const TEMP_UPDATE = 'AREAS.TEMP_UPDATE';\nexport const TEMP_UPDATE_SUCCESS = 'AREAS.TEMP_UPDATE_SUCCESS';\nexport const ROUTINE_SUCCESSFULLY_ADDED = 'AREAS.ROUTINE_SUCCESSFULLY_ADDED';\nexport const OPEN_EDIT_ROUTINE_DIALOG = 'AREAS.OPEN_EDIT_ROUTINE_DIALOG';\nexport const CLOSE_EDIT_ROUTINE_DIALOG = 'AREAS.CLOSE_EDIT_ROUTINE_DIALOG';\nexport const RESET_EDIT_ROUTINE_DIALOG = 'AREAS.RESET_EDIT_ROUTINE_DIALOG';\nexport const ROUTINE_SUCCESSFULLY_DELETED =\n  'AREAS.ROUTINE_SUCCESSFULLY_DELETED';\nexport const AREA_SUCCESSFULLY_DELETED = 'AREAS.AREA_SUCCESSFULLY_DELETED';\nexport const SET_NODES_SUCCESSFUL = 'AREAS.SET_NODES_SUCCESSFUL';\nexport const HEATING_TOGGLE_SUCCESS = 'AREAS.HEATING_TOGGLE_SUCCESS';\n","export const FETCHING_AREA_DATA = 'NODES.FETCHING_AREA_DATA';\nexport const AREA_DATA_FETCHED = 'NODES.AREA_DATA_FETCHED';\nexport const SET_ACTIVE_NODE = 'NODES.SET_ACTIVE_NODE';\nexport const CLEAR_ACTIVE_NODE = 'NODES.CLEAR_ACTIVE_NODE';\nexport const FETCHING_NODE_INFO = 'NODES.FETCHING_NODE_INFO';\nexport const NODE_INFO_FETCHED = 'NODES.NODE_INFO_FETCHED';\nexport const NODE_INFO_DIRECT_LOAD = 'NODES.NODE_INFO_DIRECT_LOAD';\nexport const DISCOVERED_NEW_NODE = 'NODES.DISCOVERED_NEW_NODE';\nexport const START_NODE_SETUP = 'NODES.START_NODE_SETUP';\nexport const CLOSE_NODE_SETUP = 'NODES.CLOSE_NODE_SETUP';\nexport const CANCEL_NODE_SETUP = 'NODES.CANCEL_NODE_SETUP';\nexport const NODE_SETUP_SUCCESS = 'NODES.NODE_SETUP_SUCCESS';\nexport const NODE_DATA_FETCHED = 'NODES.NODE_DATA_FETCHED';\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { nodesDiscovered as nodesDiscoveredAction } from '../../../redux/actions/nodeActions';\nimport { nodes } from '../../../core/constants/routes';\n\nclass NodeJobs extends Component {\n  static propTypes = {\n    uninitializedNodes: PropTypes.arrayOf(PropTypes.object).isRequired,\n    nodesDiscovered: PropTypes.func.isRequired,\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      intervalIDs: [],\n    };\n  }\n\n  componentDidMount() {\n    const intervalIDs = [];\n    const jobs = [{ func: this.discoverNodes, timeout: 10000 }];\n\n    jobs.forEach(job => {\n      job.func();\n      intervalIDs.push(setInterval(job.func, job.timeout));\n    });\n\n    this.setState(intervalIDs);\n  }\n\n  componentWillUnmount() {\n    const { intervalIDs } = this.state;\n    intervalIDs.forEach(clearInterval);\n  }\n\n  discoverNodes = async () => {\n    const { uninitializedNodes, nodesDiscovered } = this.props;\n    axios\n      .get(nodes.getUninitialised)\n      .then(response => {\n        const { data } = response;\n        const currentNodeIds = uninitializedNodes.map(node => {\n          return node.nodeId;\n        });\n        const newNodes = data.filter(\n          node => !currentNodeIds.includes(node.nodeId),\n        );\n        if (newNodes.length > 0) {\n          toast.info('There are new nodes which require setup.');\n          nodesDiscovered(newNodes);\n        }\n      })\n      .catch(err => {\n        toast.error(`Failed to get node discovery info.\\n${err.toString()}`);\n      });\n  };\n\n  render() {\n    return null;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    uninitializedNodes: state.nodes.discovery.uninitializedNodes,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    nodesDiscovered: n => dispatch(nodesDiscoveredAction(n)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NodeJobs);\n","import React from 'react';\nimport NodeJobs from './NodeJobs';\n\nconst BatchJobs = () => (\n  <>\n    <NodeJobs />\n  </>\n);\n\nexport default BatchJobs;\n","import Navigation from './Navigation';\n\nexport default Navigation;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom';\nimport {\n  closeNewAreaDialog,\n  createArea,\n} from '../../../redux/actions/areaActions';\n\nconst NewAreaDialog = ({\n  open,\n  onClose,\n  inProgress,\n  createNewArea,\n  history,\n}) => {\n  const [submitted, setSubmitted] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const handleCancel = () => {\n    setInputValue('');\n    setSubmitted(false);\n    onClose();\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    if (inputValue) {\n      createNewArea(inputValue, history, () => {\n        setInputValue('');\n        setSubmitted(false);\n      });\n    }\n  };\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Create New Area</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Creating a new area allows you to assign Nodes and set custom\n          temperatures to that area.\n        </DialogContentText>\n        <form>\n          <TextField\n            margin=\"none\"\n            label=\"Area Name\"\n            error={submitted && !inputValue}\n            value={inputValue}\n            required\n            autoFocus\n            onChange={e => setInputValue(e.target.value)}\n            type=\"text\"\n            fullWidth\n            style={{ marginBottom: 20 }}\n          />\n\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginBottom: 10 }}\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n            <div style={{ position: 'relative' }}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={inProgress}\n                style={{ marginLeft: 10, marginBottom: 10 }}\n                onClick={handleSubmit}\n              >\n                Submit\n              </Button>\n              {inProgress ? (\n                <CircularProgress\n                  size={24}\n                  style={{\n                    position: 'absolute',\n                    color: '#fff',\n                    top: '50%',\n                    left: '50%',\n                    marginTop: -17,\n                    marginLeft: -6,\n                  }}\n                />\n              ) : null}\n            </div>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    open: state.areas.config.newRoomModal,\n    inProgress: state.areas.config.inProgress === 'createNewArea',\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClose: () => dispatch(closeNewAreaDialog()),\n    createNewArea: (name, history, callback) =>\n      dispatch(createArea(name, history, callback)),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(NewAreaDialog),\n);\n","import React from 'react';\nimport NewAreaDialog from './NewAreaDialog';\nimport SetupDialog from './SetupDialog';\n\nconst Dialogs = () => (\n  <>\n    <NewAreaDialog />\n    <SetupDialog />\n  </>\n);\n\nexport default Dialogs;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navigation from '../../components/navigation';\nimport Dialogs from '../../components/dialogs';\n\nconst AreasView = React.lazy(() => import('../../views/AreasView'));\nconst NodesView = React.lazy(() => import('../../views/NodesView'));\nconst NodeControlView = React.lazy(() => import('../../views/NodeControlView'));\nconst SetupView = React.lazy(() => import('../../views/SetupView'));\nconst AreaConfigView = React.lazy(() => import('../../views/AreaConfigView'));\n\nconst Router = () => (\n  <BrowserRouter>\n    <Navigation />\n    <Dialogs />\n    <Suspense fallback={<p>Loading...</p>}>\n      <Switch>\n        <Route component={AreasView} path=\"/areas\" exact />\n        <Route component={AreaConfigView} path=\"/areas/:id\" exact />\n        <Route component={NodesView} path=\"/nodes\" exact />\n        <Route component={NodeControlView} path=\"/nodes/:id\" exact />\n        <Route component={SetupView} path=\"/setup\" exact />\n      </Switch>\n    </Suspense>\n  </BrowserRouter>\n);\n\nexport default Router;\n","/* eslint-disable import/prefer-default-export */\n// TODO: Remove eslint-disable when more datafeed types are added\n\nexport const Area = {\n  TempUpdate: 'DATAFEED.AREA.TEMPUPDATE',\n  HumUpdate: 'DATAFEED.AREA.HUMUPDATE',\n  TargetSet: 'DATAFEED.AREA.TARGETSET',\n  NodeAdd: 'DATAFEED.AREA.NODEADD',\n  NewRoutine: 'DATAFEED.AREA.NEWROUTINE',\n  RemoveRoutine: 'DATAFEED.AREA.REMOVEROUTINE',\n  RemoveNode: 'DATAFEED.AREA.REMOVENODE',\n  NodesSet: 'DATAFEED.AREA.NODESSET',\n  SetHeatingEnabled: 'DATAFEED.AREA.SETHEATINGENABLED',\n};\n","import { combineReducers } from 'redux';\nimport * as types from '../types/areaTypes';\nimport * as datafeed from '../types/datafeedTypes';\n\nconst initialDataState = {\n  requestStatus: 'idle',\n  areasFetched: false,\n  areas: [],\n  areasNotFound: [],\n};\n\nconst dataReducer = (state = initialDataState, action) => {\n  switch (action.type) {\n    case types.FETCHING_AREA_DATA:\n      return { ...state, requestStatus: 'fetching' };\n    case types.AREA_DATA_FETCHED:\n      return {\n        ...state,\n        requestStatus: 'idle',\n        areas: action.payload,\n        areasFetched: true,\n      };\n    case types.AREA_SUCCESSFULLY_CREATED:\n      return { ...state, areas: [...state.areas, action.payload] };\n    case types.SINGLE_AREA_FETCH_SUCCESSFUL: {\n      const { areas } = state;\n      const { areaId } = action.payload;\n      const filteredArray = areas.filter(area => area.areaId !== areaId);\n      return { ...state, areas: [...filteredArray, action.payload] };\n    }\n    case types.AREA_NOT_FOUND:\n      if (!state.areasNotFound.includes(action.payload)) {\n        return {\n          ...state,\n          areasNotFound: [...state.areasNotFound, action.payload],\n        };\n      }\n      return state;\n\n    case datafeed.Area.TempUpdate:\n    case datafeed.Area.HumUpdate:\n    case datafeed.Area.TargetSet:\n    case datafeed.Area.NodeAdd:\n    case datafeed.Area.NewRoutine:\n    case datafeed.Area.RemoveRoutine:\n    case datafeed.Area.RemoveNode:\n    case datafeed.Area.NodesSet:\n    case datafeed.Area.SetHeatingEnabled: {\n      const { feed } = action.payload;\n      const changed = [];\n      const unchanged = [];\n      Object.keys(feed).forEach(key => {\n        state.areas.forEach(area => {\n          if (area.areaId === key) {\n            changed.push({ ...area, ...feed[key] });\n          } else {\n            unchanged.push(area);\n          }\n        });\n      });\n      return { ...state, areas: [...unchanged, ...changed] };\n    }\n    // case types.TEMP_UPDATE_SUCCESS:\n    // case types.ROUTINE_SUCCESSFULLY_DELETED:\n    // case types.SET_NODES_SUCCESSFUL:\n    // case types.HEATING_TOGGLE_SUCCESS:\n    // case types.ROUTINE_SUCCESSFULLY_ADDED: {\n    // const { areaId } = action.payload;\n    // const filteredArray = state.areas.filter(area => area.areaId !== areaId);\n    // return { ...state, areas: [...filteredArray, action.payload] };\n    // }\n    // case NODE_SETUP_SUCCESS: {\n    //   const { area } = action.payload;\n    //   const { areaId } = area;\n    //   const filteredArray = state.areas.filter(a => a.areaId !== areaId);\n    //   return { ...state, areas: [...filteredArray, action.payload] };\n    // }\n\n    default:\n      return state;\n  }\n};\n\nconst initialConfigState = {\n  newRoomModal: false,\n  inProgress: '',\n};\n\nconst configReducer = (state = initialConfigState, action) => {\n  switch (action.type) {\n    case types.OPEN_NEW_AREA_MODAL:\n      return { ...state, newRoomModal: true };\n    case types.CLOSE_NEW_AREA_MODAL:\n      return { ...state, newRoomModal: false };\n    case types.IN_PROGRESS:\n      return { ...state, inProgress: action.payload };\n    case types.AREA_SUCCESSFULLY_CREATED:\n      return { ...state, inProgress: '' };\n    default:\n      return state;\n  }\n};\n\nconst initialEditRoutineState = {\n  dialogOpen: false,\n  routineId: '',\n  routineData: '',\n};\n\nconst editRoutineReducer = (state = initialEditRoutineState, action) => {\n  switch (action.type) {\n    case types.OPEN_EDIT_ROUTINE_DIALOG:\n      return { ...state, dialogOpen: true };\n    case types.CLOSE_EDIT_ROUTINE_DIALOG:\n      return { ...state, dialogOpen: false };\n    case types.RESET_EDIT_ROUTINE_DIALOG:\n      return initialEditRoutineState;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  data: dataReducer,\n  config: configReducer,\n  editRoutine: editRoutineReducer,\n});\n","import { combineReducers } from 'redux';\nimport * as types from '../types/nodeTypes';\n\nconst initialAreasState = {\n  requestStatus: 'idle',\n  data: [],\n};\n\nconst initialCoreState = {\n  latestVersion: '2.0.0',\n  activeNode: {\n    id: '',\n    data: {},\n    loading: false,\n  },\n};\n\nconst initialDiscoveryState = {\n  uninitializedNodes: [],\n};\n\nconst initialSetupState = {\n  setupActive: false,\n  setupNodeId: '',\n  currentSetup: {},\n};\n\nconst coreReducer = (state = initialCoreState, action) => {\n  switch (action.type) {\n    case types.NODE_INFO_DIRECT_LOAD:\n      return {\n        ...state,\n        activeNode: {\n          ...state.activeNode,\n          id: action.payload,\n\n          loading: true,\n        },\n      };\n    case types.NODE_INFO_FETCHED:\n      return {\n        ...state,\n        activeNode: {\n          ...state.activeNode,\n          data: action.payload,\n          name: action.payload.name,\n          loading: false,\n        },\n      };\n    case types.SET_ACTIVE_NODE:\n      return {\n        ...state,\n        activeNode: { ...state.activeNode, ...action.payload },\n      };\n    case types.FETCHING_NODE_INFO:\n      return { ...state, activeNode: { ...state.activeNode, loading: true } };\n    case types.CLEAR_ACTIVE_NODE:\n      return { ...state, activeNode: { id: '', data: {}, loading: false } };\n    default:\n      return state;\n  }\n};\n\nconst areasReducer = (state = initialAreasState, action) => {\n  switch (action.type) {\n    case types.FETCHING_AREA_DATA:\n      return { ...state, requestStatus: 'fetching' };\n    case types.AREA_DATA_FETCHED:\n      return { ...state, requestStatus: 'idle', data: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst discoveryReducer = (state = initialDiscoveryState, action) => {\n  switch (action.type) {\n    case types.DISCOVERED_NEW_NODE:\n      return {\n        ...state,\n        uninitializedNodes: [...state.uninitializedNodes, ...action.payload],\n      };\n    case types.NODE_SETUP_SUCCESS: {\n      const { node } = action.payload;\n      return {\n        ...state,\n        uninitializedNodes: state.uninitializedNodes.filter(\n          n => n.nodeId !== node.nodeId,\n        ),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst setupReducer = (state = initialSetupState, action) => {\n  switch (action.type) {\n    case types.START_NODE_SETUP:\n      if (action.payload === state.setupNodeId) {\n        return { ...state, setupActive: true };\n      }\n      return {\n        ...state,\n        setupActive: true,\n        setupNodeId: action.payload,\n        currentSetup: {},\n      };\n    case types.CLOSE_NODE_SETUP:\n      return { ...state, setupActive: false };\n    case types.CANCEL_NODE_SETUP:\n      return initialSetupState;\n    default:\n      return state;\n  }\n};\n\nconst initialDataState = {\n  nodes: [],\n  nodesLoaded: false,\n};\n\nconst dataReducer = (state = initialDataState, action) => {\n  switch (action.type) {\n    case types.NODE_DATA_FETCHED:\n      return { ...state, nodes: action.payload, nodesLoaded: true };\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  areas: areasReducer,\n  core: coreReducer,\n  discovery: discoveryReducer,\n  setup: setupReducer,\n  data: dataReducer,\n});\n","import { combineReducers } from 'redux';\nimport areasReducer from './areasReducer';\nimport nodesReducer from './nodesReducer';\n\nexport default combineReducers({ nodes: nodesReducer, areas: areasReducer });\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        name: 'HomeAutomation',\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk),\n  // other store enhancers if any\n);\n\nconst configureStore = () => {\n  return createStore(rootReducer, enhancer);\n};\n\nexport default configureStore;\n","import { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { toast, Flip } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Area } from '../../../../redux/types/datafeedTypes';\nimport { datafeed } from '../../../../core/constants/routes';\n\nclass AreaFeed extends PureComponent {\n  static propTypes = {\n    feed: PropTypes.func.isRequired,\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      initialConnection: false,\n      connected: false,\n      currentTimeout: null,\n    };\n  }\n\n  componentDidMount() {\n    this.openWebSocket();\n  }\n\n  openWebSocket = () => {\n    const ws = new WebSocket(datafeed.areas);\n    ws.onopen = this.onOpen;\n    ws.onmessage = this.onMessage;\n    ws.onclose = this.onClose;\n    ws.onerror = this.onError;\n  };\n\n  onOpen = () => {\n    const { initialConnection } = this.state;\n    this.setState({ initialConnection: true, connected: true });\n    if (initialConnection) {\n      toast.info('Datafeed.Area Reconnnected', {\n        autoClose: 2000,\n        transition: Flip,\n        closeButton: false,\n      });\n    } else {\n      toast.info('Datafeed.Area Connnected', {\n        autoClose: 2000,\n        transition: Flip,\n        closeButton: false,\n      });\n    }\n  };\n\n  onClose = () => {\n    const { connected, currentTimeout } = this.state;\n    this.setState({ connected: false });\n    if (connected) {\n      toast.warn('Datafeed.Area Closed', {\n        autoClose: 2000,\n        transition: Flip,\n        closeButton: false,\n      });\n    }\n    if (!currentTimeout) {\n      this.setState({\n        currentTimeout: setTimeout(() => {\n          this.openWebSocket();\n          this.setState({ currentTimeout: null });\n        }, 500),\n      });\n    }\n  };\n\n  onError = () => {\n    const { connected, currentTimeout } = this.state;\n    this.setState({ connected: false });\n    if (connected) {\n      toast.error('Datafeed.Area Errored', {\n        autoClose: 2000,\n        transition: Flip,\n        closeButton: false,\n      });\n    }\n    if (!currentTimeout) {\n      this.setState({\n        currentTimeout: setTimeout(() => {\n          this.openWebSocket();\n          this.setState({ currentTimeout: null });\n        }, 500),\n      });\n    }\n  };\n\n  onMessage = message => {\n    const { feed } = this.props;\n    const parsedMessage = JSON.parse(message.data);\n    switch (parsedMessage.type) {\n      case 'Area.TempUpdate':\n        return feed({ type: Area.TempUpdate, message: parsedMessage });\n      case 'Area.HumUpdate':\n        return feed({ type: Area.HumUpdate, message: parsedMessage });\n      case 'Area.TargetSet':\n        return feed({ type: Area.TargetSet, message: parsedMessage });\n      case 'Area.NodeAdd':\n        return feed({ type: Area.NodeAdd, message: parsedMessage });\n      case 'Area.NewRoutine':\n        return feed({ type: Area.NewRoutine, message: parsedMessage });\n      case 'Area.RemoveRoutine':\n        return feed({ type: Area.RemoveRoutine, message: parsedMessage });\n      case 'Area.RemoveNode':\n        return feed({ type: Area.RemoveNode, message: parsedMessage });\n      case 'Area.NodesSet':\n        return feed({ type: Area.NodesSet, message: parsedMessage });\n      case 'Area.SetHeatingEnabled':\n        return feed({ type: Area.SetHeatingEnabled, message: parsedMessage });\n      default:\n        return toast.error(`Unknown Message Type \"${parsedMessage.type}\"`);\n    }\n  };\n\n  render() {\n    return null;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    feed: ({ type, message }) => {\n      dispatch({ type, payload: message });\n    },\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(AreaFeed);\n","import React from 'react';\nimport Area from './area';\n\nconst DataFeed = () => (\n  <>\n    <Area />\n  </>\n);\n\nexport default DataFeed;\n","import React from 'react';\nimport DataFeed from './datafeed';\n\nconst WebSocketConnections = () => (\n  <>\n    <DataFeed />\n  </>\n);\n\nexport default WebSocketConnections;\n","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport * as colors from '@material-ui/core/colors';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport BatchJobs from './presentation/functional/batch';\nimport './scss/App.scss';\nimport Router from './presentation/functional/router/Router';\nimport configureStore from './redux/configureStore';\nimport WebSocketConnections from './presentation/functional/websocket';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: colors.indigo,\n  },\n});\n\nconst App = () => {\n  return (\n    <Provider store={configureStore()}>\n      <ThemeProvider theme={theme}>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={6000}\n          newestOnTop\n          hideProgressBar\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n        <BatchJobs />\n        <Router />\n        <WebSocketConnections />\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const apiRoot = 'http://localhost:3000/api/';\nconst webSocketRoot = 'ws://localhost:3000/datafeed/';\n\nexport const area = {\n  all: `${apiRoot}areas`,\n  single: id => `${apiRoot}areas/${id}`,\n  createArea: `${apiRoot}areas/create`,\n  tempHistory: id => `${apiRoot}areas/${id}/temp-history`,\n  setTarget: id => `${apiRoot}areas/${id}/set-target`,\n  addRoutine: id => `${apiRoot}areas/${id}/add-routine`,\n  deleteRoutine: (id, routineId) =>\n    `${apiRoot}areas/${id}/routines/${routineId}`,\n  setNodes: id => `${apiRoot}areas/${id}/set-nodes`,\n  setHeating: (id, on) => `${apiRoot}areas/${id}/heating/${on ? 'on' : 'off'}`,\n};\n\nexport const nodes = {\n  getUninitialised: `${apiRoot}nodes/uninitialized`,\n  getAreas: `${apiRoot}nodes/areas`,\n  setup: id => `${apiRoot}nodes/${id}/setup`,\n  all: `${apiRoot}nodes`,\n};\n\nexport const datafeed = {\n  areas: `${webSocketRoot}areas`,\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport * as types from '../types/nodeTypes';\nimport { nodes } from '../../core/constants/routes';\n\nexport const getAreaData = () => {\n  return dispatch => {\n    dispatch({ type: types.FETCHING_AREA_DATA });\n    axios.get(nodes.getAreas).then(response => {\n      dispatch({\n        type: types.AREA_DATA_FETCHED,\n        payload: response.data,\n      });\n    });\n  };\n};\n\nexport const fetchNodeInfo = (id, name) => {\n  return dispatch => {\n    dispatch({ type: types.SET_ACTIVE_NODE, payload: { id, name } });\n    dispatch({ type: types.FETCHING_NODE_INFO });\n    setTimeout(() => {\n      const apiResponse = {\n        name: 'Radiator (Balcony)',\n        type: 'Heater',\n        timeOn: {\n          today: 6000,\n          week: 48000,\n        },\n        status: true,\n        on: true,\n        power: 2000,\n        firmwareVersion: '1.0.0',\n      };\n      dispatch({ type: types.NODE_INFO_FETCHED, payload: apiResponse });\n    }, 1000);\n  };\n};\n\nexport const directLoad = id => fetchNodeInfo(id, '');\n\nexport const nodesDiscovered = discoveredNodes => {\n  return { type: types.DISCOVERED_NEW_NODE, payload: discoveredNodes };\n};\n\nexport const startNodeSetup = nodeId => {\n  return { type: types.START_NODE_SETUP, payload: nodeId };\n};\n\nexport const closeSetupDialog = () => {\n  return { type: types.CLOSE_NODE_SETUP };\n};\n\nexport const cancelSetup = () => {\n  return { type: types.CANCEL_NODE_SETUP };\n};\n\nexport const setupNode = (id, name, areaId) => {\n  return dispatch => {\n    dispatch(closeSetupDialog());\n    axios\n      .post(nodes.setup(id), { name, areaId })\n      .then(response => {\n        const { data } = response;\n        toast.success('Successfully setup Node.');\n        dispatch({ type: types.NODE_SETUP_SUCCESS, payload: data });\n      })\n      .catch(() => {\n        toast.error('Failed to setup node.');\n      });\n  };\n};\n\nexport const fetchAllNodes = () => {\n  return dispatch => {\n    axios.get(nodes.all).then(response => {\n      const { data } = response;\n      dispatch({ type: types.NODE_DATA_FETCHED, payload: data });\n    });\n  };\n};\n","/* eslint-disable no-console */\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport * as types from '../types/areaTypes';\nimport { area } from '../../core/constants/routes';\n\nexport const getAreaStatus = () => {\n  return dispatch => {\n    dispatch({ type: types.FETCHING_AREA_DATA });\n    axios\n      .get(area.all)\n      .then(response => {\n        dispatch({\n          type: types.AREA_DATA_FETCHED,\n          payload: response.data,\n        });\n      })\n      .catch(console.error);\n  };\n};\n\nexport const openNewAreaDialog = () => {\n  return { type: types.OPEN_NEW_AREA_MODAL };\n};\n\nexport const closeNewAreaDialog = () => {\n  return { type: types.CLOSE_NEW_AREA_MODAL };\n};\n\nexport const createArea = (name, browserHistory, callback) => {\n  return dispatch => {\n    dispatch({ type: types.IN_PROGRESS, payload: 'createNewArea' });\n    axios\n      .post(area.createArea, { name })\n      .then(response => {\n        const { document } = response.data;\n        dispatch({ type: types.AREA_SUCCESSFULLY_CREATED, payload: document });\n        dispatch(closeNewAreaDialog());\n        browserHistory.push(`/areas/${document.areaId}`);\n        callback();\n      })\n      .catch(err => {\n        console.error(err);\n        dispatch({ type: types.AREA_CREATION_FAILED });\n      });\n  };\n};\n\nexport const fetchAreaData = id => {\n  return dispatch => {\n    dispatch({ type: types.SINGLE_AREA_FETCH });\n    axios\n      .get(area.single(id))\n      .then(response => {\n        const { data } = response;\n        dispatch({ type: types.SINGLE_AREA_FETCH_SUCCESSFUL, payload: data });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          dispatch({ type: types.AREA_NOT_FOUND, payload: id });\n        }\n      });\n  };\n};\n\nexport const updateTargetTemperature = (id, temp) => {\n  return dispatch => {\n    dispatch({ type: types.TEMP_UPDATE });\n    axios\n      .post(area.setTarget(id), {\n        target: Number(temp),\n      })\n      .then(response => {\n        const { data } = response;\n        toast.success('Successfully updated target temperature.');\n        dispatch({ type: types.TEMP_UPDATE_SUCCESS, payload: data });\n      })\n      .catch(err => {\n        console.error(err);\n        toast.error('Failed to update target temperature.');\n      });\n  };\n};\n\nexport const addNewRoutine = (id, routine) => {\n  return dispatch => {\n    axios\n      .post(area.addRoutine(id), {\n        routine,\n      })\n      .then(response => {\n        const { data } = response;\n        dispatch({ type: types.ROUTINE_SUCCESSFULLY_ADDED, payload: data });\n        toast.success('Routine Successfullly Created.');\n      })\n      .catch(err => {\n        console.error(err);\n        toast.error('Failed to create routine.');\n      });\n  };\n};\n\nexport const deleteRoutine = (id, routineId) => {\n  return dispatch => {\n    axios\n      .delete(deleteRoutine(id, routineId))\n      .then(response => {\n        const { data } = response;\n        dispatch({ type: types.ROUTINE_SUCCESSFULLY_DELETED, payload: data });\n        toast.success('Routine Successfully Deleted.');\n      })\n      .catch(err => {\n        console.error(err);\n        toast.error('Failed to delete routine.');\n      });\n  };\n};\n\nexport const deleteArea = id => {\n  return dispatch => {\n    axios\n      .delete(area.single(id))\n      .then(() => {\n        dispatch({ type: types.AREA_SUCCESSFULLY_DELETED, payload: id });\n        toast.success(\n          'Area successfully deleted. Assigned Nodes are now unassigned.',\n        );\n      })\n      .catch(err => {\n        console.error(err);\n        toast.error('Failed to delete area.');\n      });\n  };\n};\n\nexport const setNodes = (id, nodes) => {\n  return dispatch => {\n    axios\n      .post(area.setNodes(id), {\n        nodes,\n      })\n      .then(response => {\n        dispatch({ type: types.SET_NODES_SUCCESSFUL, payload: response.data });\n        toast.success('Set Nodes successfully.');\n      })\n      .catch(() => {\n        toast.error('Failed to set nodes.');\n      });\n  };\n};\n\nexport const toggleHeating = (id, on) => {\n  return dispatch => {\n    axios\n      .post(area.setHeating(id, on))\n      .then(response => {\n        dispatch({\n          type: types.HEATING_TOGGLE_SUCCESS,\n          payload: response.data,\n        });\n        toast.success(`Successfully toggled heating ${on ? 'on' : 'off'}`);\n      })\n      .catch(() => {\n        toast.error('Failed to toggle heating.');\n      });\n  };\n};\n"],"sourceRoot":""}