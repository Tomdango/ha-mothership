{"version":3,"sources":["presentation/components/node-details/HeaterControl.jsx","core/functions/calculateCost.js","presentation/components/node-details/HeaterData.jsx","presentation/components/node-details/HeaterDetails.jsx","presentation/views/NodeControlView.jsx"],"names":["HeaterControl","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDateInput","selectedDate","showSnackbar","setState","concat","handleToggle","e","_e$target","target","checked","message","value","firmwareAvailable","_this$props","latestVersion","_firmwareVersion$spli","firmwareVersion","split","_firmwareVersion$spli2","slicedToArray","major","minor","patch","_latestVersion$split","_latestVersion$split2","latestMajor","latestMinor","latestPatch","state","_this$props2","on","updateAvailable","react_default","a","createElement","Paper","List","subheader","ListSubheader","ListItem","ListItemIcon","Power_default","PowerOff_default","ListItemText","primary","ListItemSecondaryAction","Switch","edge","onChange","inputProps","aria-labelledby","Timer_default","material_ui_pickers_esm","utils","DateFnsUtils","disablePast","allowKeyboardControl","showTodayButton","Update_default","Fragment","Button","variant","secondary","style","padding","backgroundColor","red","borderRadius","yellow","green","Component","connect","nodes","core","calculateCost","timeOn","power","toFixed","HeaterData","_ref","status","Wifi_default","AttachMoney_default","today","week","HeaterDetails","openTime","arguments","length","undefined","timeout","clearTimeout","setTimeout","open","_this$state","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","Typography","Fade","in","Grid","container","spacing","item","xs","sm","node_details_HeaterControl","assign","node_details_HeaterData","NodeControlView","renderNodeControl","activeNode","loading","data","type","node_details_HeaterDetails","match","id","directLoad","params","name","NodeControl","Container","maxWidth","marginTop","display","alignItems","fontWeight","gutterBottom","CircularProgress","color","marginLeft","dispatch","withRouter"],"mappings":"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","file":"static/js/9.665e4cb2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport { connect } from 'react-redux';\nimport PowerOn from '@material-ui/icons/Power';\nimport PowerOff from '@material-ui/icons/PowerOff';\nimport Timer from '@material-ui/icons/Timer';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Button from '@material-ui/core/Button';\nimport { red, green, yellow } from '@material-ui/core/colors';\n\nclass HeaterControl extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      selectedDate: null,\n    };\n  }\n\n  handleDateInput = selectedDate => {\n    const { showSnackbar } = this.props;\n    this.setState({ selectedDate });\n    showSnackbar(`Timer set until: ${selectedDate}`, 3000);\n  };\n\n  handleToggle = e => {\n    const { showSnackbar } = this.props;\n    const { checked, value } = e.target;\n    let message = '';\n    switch (value) {\n      case 'heaterEnabled':\n        message = `Heater ${checked ? 'Enabled' : 'Disabled'}`;\n        break;\n      default:\n        break;\n    }\n    showSnackbar(message);\n  };\n\n  firmwareAvailable = () => {\n    const { latestVersion, firmwareVersion } = this.props;\n    const [major, minor, patch] = firmwareVersion.split('.');\n    const [latestMajor, latestMinor, latestPatch] = latestVersion.split('.');\n    if (latestMajor > major) return true;\n    if (latestMinor > minor) return true;\n    if (latestPatch > patch) return true;\n    return null;\n  };\n\n  render() {\n    const { on, latestVersion, firmwareVersion } = this.props;\n    const { selectedDate } = this.state;\n    const updateAvailable = this.firmwareAvailable();\n    return (\n      <Paper>\n        <List subheader={<ListSubheader>Settings</ListSubheader>}>\n          <ListItem>\n            <ListItemIcon>{on ? <PowerOn /> : <PowerOff />}</ListItemIcon>\n            <ListItemText primary=\"Heater Enabled\" />\n            <ListItemSecondaryAction>\n              <Switch\n                edge=\"end\"\n                onChange={this.handleToggle}\n                checked={on}\n                value=\"heaterEnabled\"\n                inputProps={{\n                  'aria-labelledby': 'switch-list-label-wifi',\n                }}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Timer />\n            </ListItemIcon>\n            <ListItemText primary=\"Timer\" />\n            <ListItemSecondaryAction>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  value={selectedDate}\n                  disablePast\n                  onChange={this.handleDateInput}\n                  allowKeyboardControl\n                  showTodayButton\n                />\n              </MuiPickersUtilsProvider>\n            </ListItemSecondaryAction>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <UpdateIcon />\n            </ListItemIcon>\n            {updateAvailable ? (\n              <>\n                <ListItemText>Update Available</ListItemText>\n                <ListItemSecondaryAction>\n                  <Button variant=\"contained\">Update Firmware</Button>\n                </ListItemSecondaryAction>\n              </>\n            ) : (\n              <ListItemText secondary=\"Firmware Up To Date\" />\n            )}\n          </ListItem>\n          {updateAvailable ? (\n            <ListItem>\n              <ListItemIcon />\n              <ListItemText>\n                <span\n                  style={{\n                    padding: 10,\n                    backgroundColor: red[500],\n                    borderRadius: '10px 0 0 10px',\n                  }}\n                >\n                  {firmwareVersion}\n                </span>\n                <span\n                  style={{\n                    padding: 10,\n                    backgroundColor: yellow[900],\n                  }}\n                >\n                  →\n                </span>\n                <span\n                  style={{\n                    padding: 10,\n                    backgroundColor: green[500],\n                    borderRadius: '0 10px 10px 0',\n                  }}\n                >\n                  {latestVersion}\n                </span>\n              </ListItemText>\n            </ListItem>\n          ) : null}\n        </List>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    latestVersion: state.nodes.core.latestVersion,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(HeaterControl);\n","const calculateCost = (timeOn, power) => {\n  const hoursOn = timeOn / 60 / 60;\n  const kiloWatt = power / 1000;\n  const kiloWattHours = kiloWatt * hoursOn;\n  const pence = kiloWattHours * 13.2;\n  return (pence / 100).toFixed(2);\n};\n\nexport default calculateCost;\n","import React from 'react';\nimport {\n  Paper,\n  List,\n  ListSubheader,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport PowerIcon from '@material-ui/icons/Power';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport PropTypes from 'prop-types';\n\nimport calculateCost from '../../../core/functions/calculateCost';\n\nconst HeaterData = ({ timeOn, power, on, status }) => {\n  return (\n    <Paper>\n      <List subheader={<ListSubheader>Details</ListSubheader>}>\n        <ListItem>\n          <ListItemIcon>\n            <WifiIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Node Status\" />\n          <ListItemSecondaryAction>\n            <ListItemText secondary={status ? 'Online' : 'Offline'} />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <PowerIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Heater Status\" />\n          <ListItemSecondaryAction>\n            <ListItemText secondary={on ? 'On' : 'Off'} />\n          </ListItemSecondaryAction>\n        </ListItem>\n\n        <ListItem>\n          <ListItemIcon>\n            <AttachMoneyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Cost (Today)\" />\n          <ListItemSecondaryAction>\n            <ListItemText\n              secondary={`£${calculateCost(timeOn.today, power)}`}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <AttachMoneyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Cost (Week)\" />\n          <ListItemSecondaryAction>\n            <ListItemText secondary={`£${calculateCost(timeOn.week, power)}`} />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Paper>\n  );\n};\n\nHeaterData.propTypes = {\n  timeOn: PropTypes.objectOf(PropTypes.number).isRequired,\n  power: PropTypes.number.isRequired,\n};\n\nexport default HeaterData;\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Grid from '@material-ui/core/Grid';\nimport HeaterControl from './HeaterControl';\nimport HeaterData from './HeaterData';\n\nclass HeaterDetails extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      timeout: null,\n      open: false,\n      message: '',\n      selectedDate: null,\n    };\n  }\n\n  showSnackbar = (message, openTime = 1500) => {\n    const { timeout } = this.state;\n    if (timeout) clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.setState({ timeout: null, open: false });\n      }, openTime),\n      open: true,\n      message,\n    });\n  };\n\n  render() {\n    const { on } = this.props;\n    const { open, message } = this.state;\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          open={open}\n        >\n          <SnackbarContent\n            // style={{ backgroundColor: green[500], color: '#fafafa' }}\n            message={<Typography variant=\"body1\">{message}</Typography>}\n          />\n        </Snackbar>\n        <Fade in>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <HeaterControl\n                showSnackbar={this.showSnackbar}\n                on={on}\n                {...this.props}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <HeaterData {...this.props} />\n            </Grid>\n          </Grid>\n        </Fade>\n      </>\n    );\n  }\n}\n\nexport default HeaterDetails;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Typography, CircularProgress } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { directLoad } from '../../redux/actions/nodeActions';\nimport HeaterDetails from '../components/node-details/HeaterDetails';\n\nclass NodeControlView extends Component {\n  static propTypes = {\n    activeNode: PropTypes.object,\n    directLoad: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    const { activeNode, match } = this.props;\n    const { id } = activeNode;\n    if (!id) {\n      directLoad(match.params.id);\n    }\n  }\n\n  renderNodeControl = () => {\n    const { activeNode } = this.props;\n    const { loading, data } = activeNode;\n    if (loading) {\n      return null;\n    }\n    switch (data.type) {\n      case 'Heater':\n        return <HeaterDetails {...data} />;\n      default:\n        return <Typography variant=\"body1\">Unknown Node Type.</Typography>;\n    }\n  };\n\n  render() {\n    const { activeNode } = this.props;\n    const { name, loading } = activeNode;\n    const NodeControl = this.renderNodeControl();\n    return (\n      <Container maxWidth=\"xl\" style={{ marginTop: 20 }}>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <Typography\n            variant=\"h4\"\n            style={{ fontWeight: 'lighter' }}\n            gutterBottom\n          >\n            {name || 'Loading'}\n          </Typography>\n          {loading ? (\n            <CircularProgress color=\"secondary\" style={{ marginLeft: 30 }} />\n          ) : null}\n        </div>\n        {NodeControl}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { activeNode: state.nodes.core.activeNode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    directLoad: () => dispatch(directLoad()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(NodeControlView));\n"],"sourceRoot":""}